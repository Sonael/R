legend(x = 4.5, y = 7, pch = 17,
col = c(1:3), legend = levels(iris$Species))
#Grafico de Dispersão
plot(iris$Sepal.Length,
iris$Sepal.Width, main = "Iris Data",
col = iris$Species,
pch = 17, cex = 2,
xlab = "Senpal Length",
ylab = "Petal Length")
legend(x = 4.5, y = 7, pch = 17,
col = c(1:3), legend = levels(iris$Species))
legend(x = 4.5, y = 7, pch = 17,
col = c(1:3), legend = levels(iris$Species))
plot(iris$Sepal.Length,
iris$Sepal.Width, main = "Iris Data",
col = iris$Species,
pch = 17, cex = 2,
xlab = "Senpal Length",
ylab = "Petal Length")
legend(x = 4.5, y = 7, pch = 17,
col = c(1:3), legend = levels(iris$Species))
plot(iris$Sepal.Length,
iris$Sepal.Width,
main = "Iris Data",
col = iris$Species,
pch = 17, cex = 2,
xlab = "Senpal Length",
ylab = "Petal Length")
legend(x = 4.5, y = 7, pch = 17,
col = c(1:3), legend = levels(iris$Species))
max.temp <- c(30,35,40,38,25,24,23)
barplot(max.temp)
barplot(max.temp,
main = "Máxima Temperatura em uma semana",
ylab = "Graus em Celsius",
xlab = "Dia",
names.arg = c("Sun","Mon","Tue","Wed","Thu","Fri","Sat"),
col = rainbow(7))
barplot(max.temp,
main = "Máxima Temperatura em uma semana",
ylab = "Graus em Celsius",
xlab = "Dia",
names.arg = c("Sun","Mon","Tue","Wed","Thu","Fri","Sat"),
col = rainbow(7),
horiz = T)
colors <- c("green", "orange", "brown")
months <- c("Mar", "Apr", "May", "Jun", "Jul")
regions <- c("East","West", "North")
Values <-
matrix(c(2,9,3,11,9,4,8,7,3,12,5,2,8,10,11),
nrow = 3,ncol = 5,byrow = T)
View(Values)
barplot(Values, main = "Rendimento Total",
names.arg = months,
xlab = "Meses",
ylab = "Rendimento",
col = colors)
barplot(Values, main = "Rendimento Total",
names.arg = months,
xlab = "Meses",
ylab = "Rendimento",
col = colors)
barplot(Values, main = "Rendimento Total",
names.arg = months,
xlab = "Meses",
ylab = "Rendimento",
col = colors)
barplot(Values, main = "Rendimento Total",
names.arg = months,
xlab = "Meses",
ylab = "Rendimento",
col = colors)
barplot(Values, main = "Rendimento Total",
names.arg = months,
xlab = "Meses",
ylab = "Rendimento",
col = colors)
colors <- c("cian", "purple", "blue")
barplot(Values, main = "Rendimento Total",
names.arg = months,
xlab = "Meses",
ylab = "Rendimento",
col = colors)
colors <- c("black", "purple", "blue")
barplot(Values, main = "Rendimento Total",
names.arg = months,
xlab = "Meses",
ylab = "Rendimento",
col = colors)
colors <- c("red", "orange", "yellow")
barplot(Values, main = "Rendimento Total",
names.arg = months,
xlab = "Meses",
ylab = "Rendimento",
col = colors)
colors <- c("yellow", "orange", "red")
barplot(Values, main = "Rendimento Total",
names.arg = months,
xlab = "Meses",
ylab = "Rendimento",
col = colors)
barplot(Values, main = "Rendimento Total",
names.arg = months,
xlab = "Meses",
ylab = "Rendimento",
col = colors,
beside = T)
legend("topleft",pch= c(15,15,15), col = colors, legend = regions)
Temperature <- airquality$Temp
hist(Temperature, col = "grey")
hist(Temperature, col = "grey",
density = 10)
hist(Temperature, col = "grey",
density = 1)
hist(Temperature, col = "grey",
density = 20)
hist(Temperature, col = "grey",
density = 10)
hist(Temperature, col = "grey",
density = 10,
breaks = 20)
hist(Temperature, col = "grey",
density = 10,
breaks = 20,
freq = F)
hist(Temperature,col="grey",
probability = T)
densityTemp <- density(Temperature)
lines(densityTemp)
x <- c(32,12,30,53)
labels <- c("Recife","Durham", "Toronto", "Amsterdam")
pie(x, labels)
pie(x, labels,
main = "Grafico de Cidades",
col = rainbow(4))
pct <- round(x/sum(x)*100)
lbls <- paste(labels, pct)
lbls <- paste(lbls,"%",sep = "")
pie(x, labels,
main = "Grafico de Cidades",
col = rainbow(4))
pie(x, labels = lbls,
main = "Grafico de Cidades",
col = rainbow(4))
legend("topright",
legend = c("Recife","Durham", "Toronto", "Amsterdam"),
cex = 0.8, fill = rainbow(length(x)))
legend("topright",
legend = c("Recife","Durham", "Toronto", "Amsterdam"),
cex = 0.8, fill = rainbow(length(x)))
pie(x, labels = lbls,
main = "Grafico de Cidades",
col = rainbow(4))
legend("topright",
legend = c("Recife","Durham", "Toronto", "Amsterdam"),
cex = 0.8, fill = rainbow(length(x)))
pct <- round(x/sum(x)*100)
lbls <- paste(lbls,"%",sep = "")
pie(x, labels = lbls,
main = "Grafico de Cidades",
col = rainbow(4))
legend("topright",
legend = c("Recife","Durham", "Toronto", "Amsterdam"),
cex = 0.8, fill = rainbow(length(x)))
pct <- round(x/sum(x)*100)
lbls <- paste(lbls,"%",sep = "")
pie(x, labels = lbls,
main = "Grafico de Cidades",
col = rainbow(4))
legend("topright",
legend = c("Recife","Durham", "Toronto", "Amsterdam"),
cex = 0.8, fill = rainbow(length(x)))
x <- c(32,12,30,53)
labels <- c("Recife","Durham", "Toronto", "Amsterdam")
pct <- round(x/sum(x)*100)
lbls <- paste(lbls,"%",sep = "")
pie(x, labels = lbls,
main = "Grafico de Cidades",
col = rainbow(4))
legend("topright",
legend = c("Recife","Durham", "Toronto", "Amsterdam"),
cex = 0.8, fill = rainbow(length(x)))
pct <- round(x/sum(x)*100)
lbls <- paste(pct,"%",sep = "")
pie(x, labels = lbls,
main = "Grafico de Cidades",
col = rainbow(4))
legend("topright",
legend = c("Recife","Durham", "Toronto", "Amsterdam"),
cex = 0.8, fill = rainbow(length(x)))
boxplot(mtcars$mpg)
boxplot(data = mtcars, mpg ~ cyl,
xlab = "Número de Cilindros",
ylab = "Milhas por Galão",
main= "Dados de Milhagem")
boxplot(data = mtcars, mpg ~ cyl,
xlab = "Número de Cilindros",
ylab = "Milhas por Galão",
main= "Dados de Milhagem",
outline = F)
setwd("~/R")
pdf(file = "saving_plot.pdf")
Temperature <- airquality$Temp
hist(Temperature)
hist(Temperature)
dev.off()
install.packages("plotly")
library(plotly)
fig <- plot_ly(data = iris,
x = ~Sepal.Lenght,
y = ~Petal.Lenght)
fig
fig <- plot_ly(data = iris,
x = ~sepal.lenght,
y = ~petal.lenght)
fig
fig <- plot_ly(data = iris,
x = ~Sepal.Length,
y = ~Petal.Length)
fig
trace_0 <- rnorm(100,mean = 5)
x <- c(1:100)
data <- data.frame(x,trace_0)
View(data)
fig <- plot_ly(data, x = ~x, y = ~trace_0,
mode = "lines")
fig
View(data)
Animals <- c("Giraffes","Orangutans","Monkeys")
Animals <- c("Giraffes","Orangutans","Monkeys")
SF_Zoo <- c(20,14,23)
data <- data.frame(Animals, SF_Zoo)
View(data)
fig <- plot_ly(data, x  = ~Animals y = SF_Zoo, type = "bar")
fig <- plot_ly(data, x  = ~Animals y = ~SF_Zoo, type = "bar")
fig <- plot_ly(data, x  = ~Animals, y = SF_Zoo, type = "bar")
fig
fig <- plot_ly(data, x  = Animals, y = SF_Zoo, type = "bar")
fig
fig <- plot_ly(data, x  = ~Animals, y = ~SF_Zoo, type = "bar")
fig
data <- data.frame(values=rnorm(50),index = c(1:50))
plot_ly(data, y = values, type = "box")
data <- data.frame(values=rnorm(50),index = c(1:50))
plot_ly(data, y = values, type = "box")
View(data)
plot_ly(data, y = ~values, type = "box")
data <- data.frame(values=rnorm(50),index = c(1:50))
plot_ly(data, y = ~values, type = "box")
plot_ly(data, x = ~values, type = "box")
plot_ly(data, y = ~values, type = "box")
genero <- c("Mulher","Homem")
presentes <- c(10,40)
data.frame(genero,presentes)
data <- data.frame(genero,presentes)
fig <- plot_ly(data, labels=~genero,values = ~presentes,type = "pie")
fig
fig <- plot_ly(data = iris,
x = ~Sepal.Length,
y = ~Petal.Length)
fig
fig <- fig%>%
layout(xaxis = list(title= "Pétalas"),
yaxis = list(title = "Sépalas"))
fig
fig <- fig%>%
layout(xaxis = list(title= "Sépalas"),
yaxis = list(title = "Pétalas"))
fig
fig <- plot_ly(data = iris,
x = ~Sepal.Length,
y = ~Petal.Length
color = ~Species)
fig
fig <- plot_ly(data = iris,
x = ~Sepal.Length,
y = ~Petal.Length
color = ~Species)
fig
fig <- plot_ly(data = iris,
x = ~Sepal.Length,
y = ~Petal.Length,
color = ~Species)
fig
#distrubuição normal de 100 valores com média 5
trace_0 <- rnorm(100,mean = 5)
fig <- plot_ly(data = iris,
x = ~Sepal.Length,
y = ~Petal.Length,
color = ~Species,
colors = "Dark2")
fig
levels(iris$Species) <- c("Setosa", "Versicolor", "Virginica")
levels(iris$Species)
levels(iris$Species) <- c("Setosa", "Versicolor", "Virginica")
levels(iris$Species)
levels(iris$Species) <- c("Setosa", "Versicolor", "Virginica")
fig <- plot_ly(data = iris,
x = ~Sepal.Length,
y = ~Petal.Length,
color = ~Species,
colors = "Dark2")
fig <- fig%>%
layout(xaxis = list(title= "Sépalas"),
yaxis = list(title = "Pétalas"))
fig
#distrubuição normal de 100 valores com média 5
trace_0 <- rnorm(100,mean = 5)
fig <- plot_ly(data, x = ~x, y = ~trace_0,
mode = "lines", name = "Trace_0")
fig
trace_0 <- rnorm(100,mean = 5)
trace_1 <- rnorm(100,mean = 0)
trace_2 <- rnorm(100,mean = -5)
x <- c(1:100)
data <- data.frame(x,trace_0)
fig <- plot_ly(data, x = ~x, y = ~trace_0,
mode = "lines", name = "Trace_0")
fig
fig <- plot_ly(data, x = ~x)%>%
add_trace(y = ~trace_0,
name = 'trace_0',
mode = "lines")%>%
add_trace(y = ~trace_1,
name = 'trace_1',
mode = "lines+markes")%>%
add_trace(y = ~trace_2,
name = 'trace_2',
mode = "markes")
fig
fig <- plot_ly(data, x = ~x)%>%
add_trace(y = ~trace_0,
name = 'trace_0',
mode = "lines")%>%
add_trace(y = ~trace_1,
name = 'trace_1',
mode = "lines+markers")%>%
add_trace(y = ~trace_2,
name = 'trace_2',
mode = "markers")
fig
Animals <- c("Girafa","Orangotango","Macacos")
Dois_Irmãos_zoo <- c(20,14,23)
outro_zoo <- c(12,18,29)
Animals <- c("Giraffes","Orangutans","Monkeys")
SF_Zoo <- c(20,14,23)
data <- data.frame(Animals, SF_Zoo)
fig <- plot_ly(data, x  = ~Animals, y = ~SF_Zoo, type = "bar")
fig
Animals <- c("Girafa","Orangotango","Macacos")
Dois_Irmãos_zoo <- c(20,14,23)
outro_zoo <- c(12,18,29)
Animals <- c("Girafa","Orangotango","Macacos")
Dois_Irmãos_zoo <- c(20,14,23)
outro_zoo <- c(12,18,29)
data <- data.frame(Animals, Dois_Irmãos_zoo, outro_zoo)
fig <- plot_ly(data,
x = ~Animals,
y = Dois_Irmãos_zoo,
type = "bar",
name = "Dois Irmão Zoo")%>%
add_trace(y = ~outro_zoo,
name = 'Outro Zoo')%>%
layout(yaxis = list(title = "Quantidade"))
fig
data <- data.frame(values=rnorm(50),index = c(1:50))
plot_ly(data, y = ~values, type = "box")
data <- data.frame(
values1 = rnorm(50),
values2 = rnorm(50),
index = c(1:50)
)
data <- data.frame(
values1 = rnorm(50),
values2 = rnorm(50),
index = c(1:50)
)
fig <- plot_ly(data,
y= ~values1,
type = box,
name = "values 1")%>%
add_trace(y = ~values2,
name = 'Values 2')%>%
layout(yaxis = list(title = "valores"))
fig
fig <- plot_ly(data,
y= ~values1,
type = "box",
name = "values 1")%>%
add_trace(y = ~values2,
name = 'Values 2')%>%
layout(yaxis = list(title = "valores"))
fig
presentes <- c(10,40)
genero <- c("Mulher","Homem")
data <- data.frame(genero,presentes)
fig <- plot_ly(data, labels=~genero,values = ~presentes,type = "pie")
fig
moda <- function(conjunto)
{
names(table(conjunto))[table(x)==max(table(conjunto))]
}
moda(airquality$Temp)
moda <- function(conjunto)
{
names(table(conjunto))[table(conjunto)==max(table(conjunto))]
}
moda(airquality$Temp)
summarise(airquality$Temp)
summary(airquality$Temp)
#Medidas de Dispersão
#Máximo
max(airquality$Temp)
#Minimo
min(airquality$Temp)
#Amplitude
AT <- max(airquality$Temp) - min(airquality$Temp)
AT
sd(airquality$Temp)
x <- c("Cara", "Coroa")
sample(x, size = 100, replace = T)
table(y)
y <- sample(x, size = 100, replace = T)
table(y)
y <- sample(x, size = 100, replace = T)
table(y)
y <- sample(x, size = 100, replace = T)
table(y)
y <- sample(x, size = 100, replace = T)
table(y)
y <- sample(x, size = 1000, replace = T)
table(y)
y <- sample(x, size = 1000, replace = T)
table(y)
y <- sample(x, size = 1000, replace = T)
table(y)
y <- sample(x, size = 1000, replace = T)
table(y)
y <- sample(x, size = 1000, replace = T)
table(y)
y <- sample(x, size = 1000, replace = T)
table(y)
y <- sample(x, size = 1000, replace = T)
table(y)
y <- sample(x, size = 1000, replace = T,prob = c(0.1,0.9))
table(y)
y <- sample(x, size = 1000, replace = T,prob = c(0.1,0.9))
table(y)
y <- sample(x, size = 1000, replace = T,prob = c(0.1,0.9))
table(y)
y <- sample(x, size = 1000, replace = T,prob = c(0.1,0.9))
table(y)
stratifiel(iris,group="Species",
size = 5,replace = T)
stratified(iris,group="Species",
size = 5,replace = T)
sum(infert$education == "0-5yrs")
p1 <- sum(infert$education == "0-5yrs")
p1 <- sum(infert$education == "0-5yrs")/length(infert$education)
p1 <- sum(infert$education == "0-5yrs")/length(infert$education)
p2 <- sum(infert$education == "6-11yrs")/length(infert$education)
p2 <- sum(infert$education == "12+ yrs")/length(infert$education)
p1 <- sum(infert$education == "0-5yrs")/length(infert$education)
p2 <- sum(infert$education == "6-11yrs")/length(infert$education)
p3 <- sum(infert$education == "12+ yrs")/length(infert$education)
install.packages("splitstackshape")
library(splitstackshape)
stratified(infert, group = "education", size = c(0.1,0.5,0.4), replace = T)
view(stratified(infert, group = "education", size = c(0.1,0.5,0.4), replace = T))
View(stratified(infert, group = "education", size = c(0.1,0.5,0.4), replace = T))
5+7+12+15+10
5+7+12+15+10
mean(5,7,12,15,10)
var(5,7,12,15,10)
c <- c(5,7,12,15,10)
var(c)
12+10
22/49
2/length(c)
sd <- 4250
erro <- 300
0.95>0.9
nc <- (1-0.9)
nc <- (1-0.9)/2
n <- ((qnorm(nc,lower.tail = F)*sd)/erro)^2
n
sd <- 5
N <- 1500
erro <- 1.5
nc <- (1-0.95)/2
n <- (qnorm(nc,lower.tail = F)^2*sd^2*N)/((erro^2*(N-1)))+(qnorm(0.975)^2*sd^2)
n
n <- (qnorm(nc,lower.tail = F)^2*sd^2*N)/((erro^2*(N-1)))+(qnorm(nc,lower.tail = F)^2*sd^2)
var(airquality$Temp)
var(c(10,30))
sd <- (30-10)/4
sd <- (30-10)/4
erro <- 1
nc <- (1-0.98)/2
n <- ((qnorm(nc,lower.tail = F)*sd)/erro)^2
n
n <- (qnorm(nc,lower.tail = F)^2*sd^2*N)/((erro^2*(N-1)))+(qnorm(nc,lower.tail = F)^2*sd^2)
n
sd <- (30-10)/4
N <- 5.000
erro <- 1
nc <- (1-0.98)/2
n <- (qnorm(nc,lower.tail = F)^2*sd^2*N)/((erro^2*(N-1)))+(qnorm(nc,lower.tail = F)^2*sd^2)
n
pnorm(30,mean = 50, 10)
1-pnorm(30,mean = 50, 10)
pnorm(30,mean = 50, 10)
